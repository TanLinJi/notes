clear
close all
clc

m = 50;     % 蚂蚁数量
alpha = 1;  % 信息素重要程度因子
beta = 5;   % 启发式函数重要程度因子
rho = 0.3;  % 信息素挥发系数
G = 200;    % 迭代次数
Q = 500;    % 信息素增强系数
C = [       % 31个省会城市的经纬度
    116.4074, 39.9042;  % 北京
    121.4737, 31.2304;  % 上海
    113.2644, 23.1291;  % 广州
    113.9438, 35.3030;  % 郑州
    126.5349, 45.8038;  % 哈尔滨
    87.6168, 43.8256;   % 乌鲁木齐
    114.0661, 51.9259;  % 呼和浩特
    117.2010, 39.0842;  % 太原
    108.9480, 34.2632;  % 西安
    112.5655, 37.8610;  % 鄂尔多斯
    126.7030, 45.7590;  % 哈密
    103.8343, 36.0611;  % 兰州
    118.7674, 32.0415;  % 合肥
    114.4159, 43.4682;  % 沈阳
    114.5025, 38.0455;  % 石家庄
    117.1902, 39.1256;  % 天津
    120.1551, 30.2741;  % 杭州
    106.5507, 29.5647;  % 重庆
    114.2985, 30.5843;  % 武汉
    114.0661, 32.5815;  % 南昌
    118.7969, 32.0581;  % 南京
    121.5091, 25.0443;  % 台北
    117.1498, 36.6683;  % 济南
    104.0668, 30.5728;  % 成都
    112.9794, 28.2135;  % 长沙
    111.7088, 27.6150;  % 贵阳
    113.2644, 40.1290;  % 呼伦贝尔
    114.3564, 30.5811;  % 长江三峡
    109.6283, 18.2824;  % 海口
    125.3235, 43.8171;  % 吉林
    106.7339, 26.6894;  % 昆明
];

n = size(C,1);  % 城市个数
D = zeros(n);   % 城市间的距离矩阵
for i = 1:n
    for j = 1:n
        D(i,j) = norm([C(i,1)-C(j,1),C(i,2)-C(j,2)],2);
        if i==j
            D(i,j) = inf;
        end
    end
end
eta = 1./D;             % eta为启发式函数，通常取为距离的倒数
tau = ones(n);          % 初始化信息素矩阵
tabu = zeros(m,n);      % 禁忌表，存放每只蚂蚁的搜索路径
NC = 1;                 % 迭代器
R_best = zeors(G,n);    % 存放各代最优路径
L_best = ones(G,1)*inf;% 存放各代最短路径
figure(1)
while NC<=G
    %%%  将m只蚂蚁放到n个城市上
    RandPos = [];
    for i = 1:ceil(m/n)
        % ceil:向正无穷舍入
        % randperm: 返回1到n的没有重复的随机排列
        RandPos = [RandPos,randperm(n)];
    end
    tabu(:,1) = RandPos(1,1:m)';

    %%% m只蚂蚁均按概率选择下一个访问城市
    for j = 2:n
        for i = 1:m
            visited = tabu(i,1:(j-1));      % 第i只蚂蚁已经访问过的城市
            J = zeros(1,(n-(j-1)));         % 第i只蚂蚁待访问的城市
            P = J;      % 待访问城市的选择概率分布
            Jc = 1;     % 暂时没有访问过的城市的个数
            for k = 1:n
                if length(find(visited==k)) == 0
                    % 如果没有访问过，则添加到待访问城市的集合
                    J(Jc) = k;
                    Jc = Jc + 1;
                end
            end
            
            %%% 计算待访问城市的概率分布
            for k = 1:length(Jc)
                P(k) = (tau(visited(end),J(k))^alpha) * (eta(visited(end),J(k))^beta);
            end
            P = P/sum(P);
            Pcum = cumsum(P);
            Pcum(end) = 1;  % 最后一个数理论上是1，但是可能因为除数，导致最后一个数可能是0.99999等

            %%% 按概率选择一个访问的城市
            select = find(Pcum >= rand);
            to_visit = J(select(1));    % 下一个访问城市的编号
            Tabu(i,j) = to_visit;       % 将该城市加入到禁忌表中
        end
    end
    
    if NC >= 2
        Tabu(1,:) = R_best(NC-1,:);
    end

    %%% 记录本代迭代最优路线
    L = zeors(m,1);
    for i = 1:m
        
